"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[1676],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>s});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),k=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=k(e.components);return a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},N=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),N=k(t),s=r,u=N["".concat(c,".").concat(s)]||N[s]||m[s]||l;return t?a.createElement(u,i(i({ref:n},p),{},{components:t})):a.createElement(u,i({ref:n},p))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=N;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var k=2;k<l;k++)i[k]=t[k];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}N.displayName="MDXCreateElement"},1007:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(7294),r=t(6010);const l="browserWindow_my1Q",i="browserWindowHeader_jXSR",o="buttons_uHc7",c="browserWindowAddressBar_Pd8y",k="dot_giz1",p="browserWindowMenuIcon_Vhuh",m="bar_rrRL",N="browserWindowBody_Idgs";function s(e){let{children:n,minHeight:t,url:s="http://localhost:3000"}=e;return a.createElement("div",{className:l,style:{minHeight:t}},a.createElement("div",{className:i},a.createElement("div",{className:o},a.createElement("span",{className:k,style:{background:"#f25f58"}}),a.createElement("span",{className:k,style:{background:"#fbbe3c"}}),a.createElement("span",{className:k,style:{background:"#58cb42"}})),a.createElement("div",{className:(0,r.Z)(c,"text--truncate")},s),a.createElement("div",{className:p},a.createElement("div",null,a.createElement("span",{className:m}),a.createElement("span",{className:m}),a.createElement("span",{className:m})))),a.createElement("div",{className:N},n))}},2232:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294);const r="codeDescription_fg9D",l="codeDescriptionBody_Gp1s";function i(e){let{children:n,minHeight:t}=e;return a.createElement("div",{className:r,style:{minHeight:t}},a.createElement("div",{className:l},n))}},3691:(e,n,t)=>{t.d(n,{L:()=>r,W:()=>l});var a=t(7294);function r(e){let{children:n}=e;return a.createElement("span",{style:{backgroundColor:"#9747FF",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)}function l(e){let{children:n}=e;return a.createElement("span",{style:{backgroundColor:"#6A77D7",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)}},3164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>N,contentTitle:()=>p,default:()=>C,frontMatter:()=>k,metadata:()=>m,toc:()=>s});var a=t(7462),r=(t(7294),t(3905)),l=t(2232),i=t(1007),o=t(3691);const c=t.p+"assets/images/kafka-13-739d56dfb25b8d62a4429a2b9cb2daf5.png",k={sidebar_position:4,description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud574 zookeeper, kafka broker, schema-registry, connect \ub97c \ub744\uc6cc\ubd05\ub2c8\ub2e4."},p="4) Kafka System",m={unversionedId:"kafka/kafka-system",id:"kafka/kafka-system",title:"4) Kafka System",description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud574 zookeeper, kafka broker, schema-registry, connect \ub97c \ub744\uc6cc\ubd05\ub2c8\ub2e4.",source:"@site/docs/kafka/kafka-system.mdx",sourceDirName:"kafka",slug:"/kafka/kafka-system",permalink:"/tutorial/docs/kafka/kafka-system",draft:!1,editUrl:"https://github.com/mlops-for-mle/tutorial/tree/main/docs/kafka/kafka-system.mdx",tags:[],version:"current",lastUpdatedBy:"Kim dong hyun, \uae40\ub3d9\ud604",lastUpdatedAt:1671172377,formattedLastUpdatedAt:"Dec 16, 2022",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud574 zookeeper, kafka broker, schema-registry, connect \ub97c \ub744\uc6cc\ubd05\ub2c8\ub2e4."},sidebar:"tutorialSidebar",previous:{title:"3) Connect & Connector",permalink:"/tutorial/docs/kafka/connect-connector"},next:{title:"5) Source Connector",permalink:"/tutorial/docs/kafka/source-connector"}},N={},s=[{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:2},{value:"\uc2a4\ud399 \uba85\uc138\uc11c",id:"\uc2a4\ud399-\uba85\uc138\uc11c",level:3},{value:"0. \ud658\uacbd \uc124\uc815",id:"0-\ud658\uacbd-\uc124\uc815",level:2},{value:"1. Architecture",id:"1-architecture",level:2},{value:"2. Kafka Cluster",id:"2-kafka-cluster",level:2},{value:"2.1 Zookeeper &amp; Broker",id:"21-zookeeper--broker",level:3},{value:"2.2 Schema-registry",id:"22-schema-registry",level:3},{value:"2.3 Connect",id:"23-connect",level:3},{value:"2.4 \uc804\uccb4 \ucf54\ub4dc",id:"24-\uc804\uccb4-\ucf54\ub4dc",level:3},{value:"3. \uc2e4\ud589",id:"3-\uc2e4\ud589",level:2},{value:"3.1 \uc2e4\ud589",id:"31-\uc2e4\ud589",level:3},{value:"3.2 \uc2e4\ud589 \ud655\uc778",id:"32-\uc2e4\ud589-\ud655\uc778",level:3}],u={toc:s};function C(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"4-kafka-system"},"4) Kafka System"),(0,r.kt)("h2",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Docker Compose \ub97c \uc774\uc6a9\ud574 zookeeper, kafka broker, schema-registry, connect \ub97c \ub744\uc6cc\ubd05\ub2c8\ub2e4.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("h3",{id:"\uc2a4\ud399-\uba85\uc138\uc11c"},"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Zookeeper \uc640 kafka broker \ub97c \ub744\uc6b0\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"kafka-docker-compose.yaml")," \ud30c\uc77c\uc744 \uc791\uc131\ud569\ub2c8\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Zookeeper",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Service name : ",(0,r.kt)("inlineCode",{parentName:"li"},"zookeeper")),(0,r.kt)("li",{parentName:"ul"},"Image : ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-zookeeper:7.3.0")),(0,r.kt)("li",{parentName:"ul"},"Container name : ",(0,r.kt)("inlineCode",{parentName:"li"},"zookeeper")),(0,r.kt)("li",{parentName:"ul"},"Port : ",(0,r.kt)("inlineCode",{parentName:"li"},"2181:2181")),(0,r.kt)("li",{parentName:"ul"},"Environment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ZOOKEEPER_SERVER_ID")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ZOOKEEPER_CLIENT_PORT")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"2181")))))),(0,r.kt)("li",{parentName:"ul"},"Broker",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Service name : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker")),(0,r.kt)("li",{parentName:"ul"},"Image : ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-kafka:7.3.0")),(0,r.kt)("li",{parentName:"ul"},"Container name : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker")),(0,r.kt)("li",{parentName:"ul"},"Port : ",(0,r.kt)("inlineCode",{parentName:"li"},"9092:9092")),(0,r.kt)("li",{parentName:"ul"},"Environment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_BROKER_ID")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_ZOOKEEPER_CONNECT")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"zookeeper:2181")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_ADVERTISED_LISTENERS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_LISTENER_SECURITY_PROTOCOL_MAP")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_INTER_BROKER_LISTENER_NAME")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"PLAINTEXT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"0")))))),(0,r.kt)("li",{parentName:"ul"},"Schema-registry",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Service name : ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")),(0,r.kt)("li",{parentName:"ul"},"Image : ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-schema-registry:7.3.0")),(0,r.kt)("li",{parentName:"ul"},"Container name : ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")),(0,r.kt)("li",{parentName:"ul"},"Port : ",(0,r.kt)("inlineCode",{parentName:"li"},"8081:8081")),(0,r.kt)("li",{parentName:"ul"},"Environment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SCHEMA_REGISTRY_HOST_NAME")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker:29092")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SCHEMA_REGISTRY_LISTENERS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"http://schema-registry:8081")))))),(0,r.kt)("li",{parentName:"ul"},"Connect",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Service name : ",(0,r.kt)("inlineCode",{parentName:"li"},"connect")),(0,r.kt)("li",{parentName:"ul"},"Image : ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-connect:7.3.0")," \ub97c \uc774\uc6a9\ud55c Dockerfile",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Environment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_PLUGIN_PATH")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"\u201c/usr/share/java,/usr/share/confluent-hub-components\u201d")))),(0,r.kt)("li",{parentName:"ul"},"Run",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0")))))),(0,r.kt)("li",{parentName:"ul"},"Container name : ",(0,r.kt)("inlineCode",{parentName:"li"},"connect")),(0,r.kt)("li",{parentName:"ul"},"Port : ",(0,r.kt)("inlineCode",{parentName:"li"},"8083:8083")),(0,r.kt)("li",{parentName:"ul"},"Environment",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_BOOTSTRAP_SERVERS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_BOOTSTRAP_SERVERS")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker:29092")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_REST_ADVERTISED_HOST_NAME")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"connect")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_GROUP_ID")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-connect-group")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_CONFIG_STORAGE_TOPIC")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-connect-configs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_OFFSET_STORAGE_TOPIC")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-connect-offsets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_STATUS_STORAGE_TOPIC")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-connect-status")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_STATUS_STORAGE_REPLICATION_FACTOR")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_KEY_CONVERTER")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.kafka.connect.storage.StringConverter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_VALUE_CONVERTER")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.kafka.connect.json.JsonConverter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"http://schema-registry:8081")))))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"kafka-docker-compose.yaml")," \uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"docker ps")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc798 \ub744\uc6cc\uc84c\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.")))),(0,r.kt)("hr",null),(0,r.kt)(i.Z,{url:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/ch7",mdxType:"BrowserWindow"},(0,r.kt)("p",null,"\ud574\ub2f9 \ud30c\ud2b8\uc758 \uc804\uccb4 \ucf54\ub4dc\ub294 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/ch7"},"mlops-for-mle/ch7/")," \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"ch7\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n// highlight-next-line\n\u251c\u2500\u2500 connect.Dockerfile\n\u251c\u2500\u2500 create_table.py\n// highlight-next-line\n\u251c\u2500\u2500 kafka-docker-compose.yaml\n\u251c\u2500\u2500 naive-docker-compose.yaml\n\u251c\u2500\u2500 sink_connector.json\n\u251c\u2500\u2500 source_connector.json\n\u251c\u2500\u2500 target-docker-compose.yaml\n\u2514\u2500\u2500 target.Dockerfile\n"))),(0,r.kt)("h2",{id:"0-\ud658\uacbd-\uc124\uc815"},"0. \ud658\uacbd \uc124\uc815"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udccc \uc774\ubc88 \ucc55\ud130\ub97c \uc9c4\ud589\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc704\ud574\uc11c \uc55e\uc11c ",(0,r.kt)(o.W,{mdxType:"Chapter"},"2) Producer & Consumer")," \ucc55\ud130\uc5d0\uc11c \uc2e4\ud589\ub41c docker compose \ub97c \uc885\ub8cc\ud574\uc57c \ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,"\uc544\ub798 \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uc885\ub8cc\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\ndocker compose -p ch7-naive down -v\n")),(0,r.kt)("h2",{id:"1-architecture"},"1. Architecture"),(0,r.kt)("p",null,"[\uadf8\ub9bc 7-13]","\uc740 \uc774\ubc88 \uc2e4\uc2b5\uc5d0\uc11c \ub2e4\ub8f0 \uc11c\ube44\uc2a4\ub4e4\uc758 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc785\ub2c8\ub2e4."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:c,style:{scale:"80%"}}),"[\uadf8\ub9bc7-13] Kafka System"),(0,r.kt)("p",null,"\uac01\uac01\uc758 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Kafka Cluster")," : source connector \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubc1b\uc544 topic \uc5d0 \uc800\uc7a5\ud558\uace0, sink connector \ub85c \ub118\uaca8\uc904 kafka cluster \uc785\ub2c8\ub2e4. broker \ub294 multi broker \uac00 \uc544\ub2cc single broker \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Zookeeper")," : broker server \uc758 \uc0c1\ud0dc \uac10\uc9c0\ub97c \uc704\ud574 \uc0ac\uc6a9\ub418\ub294 zookeeper server \uc785\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Schema Registry")," : \uba54\uc2dc\uc9c0\uc758 schema \ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud55c schema registry server \uc785\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Kafka Connect")," : connector \ub97c \ub744\uc6b0\uae30 \uc704\ud55c connect server \uc785\ub2c8\ub2e4.")),(0,r.kt)("p",null,"\uc774\uc81c \uc11c\ube44\uc2a4\ub97c \ud558\ub098\uc529 \uad6c\uccb4\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"2-kafka-cluster"},"2. Kafka Cluster"),(0,r.kt)("h3",{id:"21-zookeeper--broker"},"2.1 Zookeeper & Broker"),(0,r.kt)("p",null,"zookeeper \uc640 broker \ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\ub294 ",(0,r.kt)(o.W,{mdxType:"Chapter"},"2) Producer & Consumer")," \ucc55\ud130\uc5d0\uc11c \uc791\uc131\ud55c \ub0b4\uc6a9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},'version: "3"\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:7.3.0\n    container_name: zookeeper\n    ports:\n      - 2181:2181\n    environment:\n      ZOOKEEPER_SERVER_ID: 1\n      ZOOKEEPER_CLIENT_PORT: 2181\n  broker:\n    image: confluentinc/cp-kafka:7.3.0\n    container_name: broker\n    depends_on:\n      - zookeeper\n    ports:\n      - 9092:9092\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n')),(0,r.kt)("h3",{id:"22-schema-registry"},"2.2 Schema-registry"),(0,r.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c schema-registry \ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},"  schema-registry:\n    image: confluentinc/cp-schema-registry:7.3.0\n    container_name: schema-registry\n    depends_on:\n      - broker\n    ports:\n      - 8081:8081\n    environment:\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092\n      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image")," : schema-registry \uc758 \uc774\ubbf8\uc9c0\ub85c ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-schema-registry:7.3.0")," \ub97c \uc774\uc6a9\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"container_name")," : container\uc758 \uc774\ub984\uc740 ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")," \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"depends_on")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker")," \uac00 \uba3c\uc800 \uc2e4\ud589\ub41c \ud6c4 schema-registry \uc2e4\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ports")," : schema-registry \uc758 \ud3ec\ud2b8\uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},"8081:8081")," \uc744 \ud3ec\ud2b8\ud3ec\uc6cc\ub529\ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,"schema-registry \uc758 \ud658\uacbd \ubcc0\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SCHEMA_REGISTRY_HOST_NAME"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"schema-registry \uc758 host name \uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")," \ub85c \uc9c0\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"bootstrap \uc73c\ub85c \ub744\uc6cc\uc9c4 broker server \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c ",(0,r.kt)("inlineCode",{parentName:"li"},"<broker service name>:<broker service internal port>")," \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"broker:29092")," \uc744 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SCHEMA_REGISTRY_LISTENERS"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\uc678\ubd80\uc5d0\uc11c \uc811\uc18d\ud560 \ub9ac\uc2a4\ub108\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"http://schema-registry:8081")," \uc73c\ub85c \uc124\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4.")))))),(0,r.kt)("h3",{id:"23-connect"},"2.3 Connect"),(0,r.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c connect \ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"Connect \uc758 \uacbd\uc6b0 image \ub97c build \ud558\uae30 \uc704\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," \uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\nDockerfile \uc740 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="connect.Dockerfile"',title:'"connect.Dockerfile"'},'# connect.Dockerfile\nFROM confluentinc/cp-kafka-connect:7.3.0\n\nENV CONNECT_PLUGIN_PATH="/usr/share/java,/usr/share/confluent-hub-components"\n\nRUN confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5 &&\\\n  confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2 &&\\\n  confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FROM")," : base image \ub85c ",(0,r.kt)("inlineCode",{parentName:"li"},"confluentinc/cp-kafka-connect:7.3.0")," \uc744 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ENV")," : Connect \uc5d0\uc11c\ub294 \ud50c\ub7ec\uadf8\uc778\uc758 path \ub97c \uc124\uc815\ud574\uc8fc\uc5b4\uc57c\ud569\ub2c8\ub2e4.\n\uc5ec\uae30\uc11c\ub294 base image \uc5d0 \uc788\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"/usr/share/java")," path \uc640 ",(0,r.kt)("inlineCode",{parentName:"li"},"/usr/share/confluent-hub-components")," path \ub97c \ud50c\ub7ec\uadf8\uc778 path \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \ud569\uccd0\uc11c  ",(0,r.kt)("inlineCode",{parentName:"li"},'"/usr/share/java,/usr/share/confluent-hub-components"')," \ud50c\ub7ec\uadf8\uc778 path \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RUN")," : \ub2e4\uc74c\uc73c\ub85c image \ub97c \ub9cc\ub4e4 \ub54c \uc2e4\ud589\ud560 \ucf54\ub4dc\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 JDBC connector \ub97c \uc0ac\uc6a9\ud560 \uac83\uc774\uba70, PostgreSQL \uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud55c connector \ub97c \uc124\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. \ub610\ud55c value schema \uc758 converter \ub294 json converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ud658\uacbd \ubcc0\uc218\ub85c \uc124\uc815\ud55c \ud50c\ub7ec\uadf8\uc778 path \ub97c \ud1b5\ud574 \uc544\ub798\uc758 3\uac00\uc9c0 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec connector \uc640 converter \uc5d0 \ud544\uc694\ud55c \uae30\ub2a5\ub4e4\uc744 \uc124\uce58\ud569\ub2c8\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0")))))),(0,r.kt)("p",null,"\uc55e\uc11c \uc791\uc131\ud55c Dockerfile \uc744 \uc774\uc6a9\ud55c connect \uc758 \ucf54\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},"  connect:\n    build:\n      context: .\n      dockerfile: connect.Dockerfile\n    container_name: connect\n    depends_on:\n      - broker\n      - schema-registry\n    ports:\n      - 8083:8083\n    environment:\n      CONNECT_BOOTSTRAP_SERVERS: broker:29092\n      CONNECT_REST_ADVERTISED_HOST_NAME: connect\n      CONNECT_GROUP_ID: docker-connect-group\n      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs\n      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets\n      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status\n      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter\n      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")," \uc744 build \ud558\uae30 \uc704\ud574 \uacbd\ub85c\ub85c ",(0,r.kt)("inlineCode",{parentName:"li"},".")," \uc744 ",(0,r.kt)("inlineCode",{parentName:"li"},"dockerfile")," \ud30c\uc77c\uba85\uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},"connect.Dockerfile")," \uc744 \uc785\ub825\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"container_name")," : container \uc758 \uc774\ub984\uc73c\ub85c ",(0,r.kt)("inlineCode",{parentName:"li"},"connect")," \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"depends_on")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"broker")," \uc640 ",(0,r.kt)("inlineCode",{parentName:"li"},"schema-registry")," \uac00 \uba3c\uc800 \uc2e4\ud589\ub41c \ub2e4\uc74c\uc5d0 connect \uac00 \uc2e4\ud589\ub418\uc57c \ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ports")," : connect \uc758 port \uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},"8083:8083")," \ub97c \ud3ec\ud2b8\ud3ec\uc6cc\ub529\ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,"Connect \uc758 \ud658\uacbd \ubcc0\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_BOOTSTRAP_SERVERS"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"bootstrap \uc73c\ub85c \ub744\uc6cc\uc9c4 broker server \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c  ",(0,r.kt)("inlineCode",{parentName:"li"},"<broker service name>:<broker service internal port>")," \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_REST_ADVERTISED_HOST_NAME"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"kafka broker \uc5d0\uc11c bootstrap \uc73c\ub85c \ub744\uc6cc\uc9c4 server \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c  ",(0,r.kt)("inlineCode",{parentName:"li"},"<broker service name>:<broker service internal port>")," \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_GROUP_ID"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"connect cluster \uadf8\ub8f9\uc5d0\uc11c \uac01\uac01\uc758 connect \ub97c \uc2dd\ubcc4\ud560 \ub54c \ud544\uc694\ud55c ID \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_CONFIG_STORAGE_TOPIC"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"connector config \ub97c \uc800\uc7a5\ud560 broker \uc758 topic \uba85\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"config \ub97c \uc800\uc7a5\ud558\ub294 topic \uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 replication factor \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),"\ub85c \uc124\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_OFFSET_STORAGE_TOPIC"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"connector offset \uc744 \uc800\uc7a5\ud560 broker \uc758 topic \uba85\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"offset \uc744 \uc800\uc7a5\ud558\ub294 topic \uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 replication factor \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),"\ub85c \uc124\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_STATUS_STORAGE_TOPIC"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"connector \uc640 task \uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud560 broker \uc758 topic \uba85\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_STATUS_STORAGE_REPLICATION_FACTOR"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\ub294 topic \uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 replication factor \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"1"),"\ub85c \uc124\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_KEY_CONVERTER"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"key \uc5d0 \ub300\ud55c converter \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 string converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.kafka.connect.storage.StringConverter")," \ub97c \uae30\uc785\ud574\uc90d\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_VALUE_CONVERTER"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"value \uc5d0 \ub300\ud55c converter \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 json converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.kafka.connect.json.JsonConverter")," \ub97c \uae30\uc785\ud574\uc90d\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"value converter \uc5d0 \ub300\ud55c schema registry url \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 \uc55e\uc11c \uc0b4\ud3b4\ubcf8 schema registry \uc758 service name \uacfc port \uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},"http://schema-registry:8081")," \ub97c \uae30\uc785\ud574\uc90d\ub2c8\ub2e4.")))))),(0,r.kt)("h3",{id:"24-\uc804\uccb4-\ucf54\ub4dc"},"2.4 \uc804\uccb4 \ucf54\ub4dc"),(0,r.kt)("p",null,"\ubaa8\ub4e0 \uc11c\ube44\uc2a4\ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# kafka-docker-compose.yaml\nversion: "3"\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:7.3.0\n    container_name: zookeeper\n    ports:\n      - 2181:2181\n    environment:\n      ZOOKEEPER_SERVER_ID: 1\n      ZOOKEEPER_CLIENT_PORT: 2181\n\n  broker:\n    image: confluentinc/cp-kafka:7.3.0\n    container_name: broker\n    depends_on:\n      - zookeeper\n    ports:\n      - 9092:9092\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n\n  schema-registry:\n    image: confluentinc/cp-schema-registry:7.3.0\n    container_name: schema-registry\n    depends_on:\n      - broker\n    ports:\n      - 8081:8081\n    environment:\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092\n      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081\n\n  connect:\n    build:\n      context: .\n      dockerfile: connect.Dockerfile\n    container_name: connect\n    depends_on:\n      - broker\n      - schema-registry\n    ports:\n      - 8083:8083\n    environment:\n      CONNECT_BOOTSTRAP_SERVERS: broker:29092\n      CONNECT_REST_ADVERTISED_HOST_NAME: connect\n      CONNECT_GROUP_ID: docker-connect-group\n      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs\n      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets\n      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status\n      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter\n      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081\n\nnetworks:\n  default:\n    name: mlops-network\n    external: true\n')),(0,r.kt)("h2",{id:"3-\uc2e4\ud589"},"3. \uc2e4\ud589"),(0,r.kt)("h3",{id:"31-\uc2e4\ud589"},"3.1 \uc2e4\ud589"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker compose")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc704\uc5d0\uc11c \uc791\uc131\ud55c \uc11c\ube44\uc2a4\ub4e4\uc744 \ub744\uc6cc\ubd05\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\ndocker compose -p ch7-kafka -f kafka-docker-compose.yaml up -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p")," : project name \uc744 ",(0,r.kt)("inlineCode",{parentName:"li"},"ch7-kafka")," \ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-f")," :file name \uc740 \uc704\uc5d0\uc11c \uc791\uc131\ud55c \ud30c\uc77c \uc774\ub984\uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},"kafka-docker-compose.yaml"),"\uc744 \uc801\uc5b4\uc90d\ub2c8\ub2e4."))),(0,r.kt)("h3",{id:"32-\uc2e4\ud589-\ud655\uc778"},"3.2 \uc2e4\ud589 \ud655\uc778"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker ps")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc11c\ube44\uc2a4\ub4e4\uc774 \uc798 \ub744\uc6cc\uc84c\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# terminal-command\ndocker ps\nCONTAINER ID   IMAGE                                   COMMAND                  CREATED          STATUS                             PORTS                                        NAMES\n2fe161195b13   ch7-kafka-connect                       "/etc/confluent/dock\u2026"   41 seconds ago   Up 39 seconds (health: starting)   0.0.0.0:8083->8083/tcp, 9092/tcp             connect\n4b98228b7e77   confluentinc/cp-schema-registry:7.3.0   "/etc/confluent/dock\u2026"   41 seconds ago   Up 39 seconds                      0.0.0.0:8081->8081/tcp                       schema-registry\n505d3a4d6fdb   confluentinc/cp-kafka:7.3.0             "/etc/confluent/dock\u2026"   41 seconds ago   Up 40 seconds                      0.0.0.0:9092->9092/tcp                       broker\n7f4a6f51837c   confluentinc/cp-zookeeper:7.3.0         "/etc/confluent/dock\u2026"   42 seconds ago   Up 40 seconds                      2888/tcp, 0.0.0.0:2181->2181/tcp, 3888/tcp   zookeeper\n')))}C.isMDXComponent=!0}}]);